plugins {
    id "idea"
    id "maven-publish"
    id "net.minecraftforge.gradle" version "[6.0, 6.2)"
}

apply plugin: "idea"
apply plugin: "java"
apply plugin: "net.minecraftforge.gradle"
apply plugin: "maven-publish"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

base {
    archivesName = "${mod_name}-forge-${minecraft_version}"
}

dependencies {
    implementation project(':common')
	implementation project(path: ':common')
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly project(":common")
}

minecraft {
    mappings channel: 'official', version: "${minecraft_version}"

    runs {
        client {
            workingDirectory project.file("run")
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName "Client"
            property "forge.logging.console.level", "debug"

            mods {
                "${mod_id}" {
                    source sourceSets.main
                    source project(":common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run")
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName "Server"
            property "forge.logging.console.level", "debug"

            mods {
                "${mod_id}" {
                    source sourceSets.main
                    source project(":common").sourceSets.main
                }
            }
        }
    }
}

processResources {
    from project(":common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: forge_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: license, mod_version: version,
            mod_authors: mod_authors, mod_credits: mod_credits, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile) {
    source(project(":common").sourceSets.main.allSource)
}
